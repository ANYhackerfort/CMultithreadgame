Project by: Matthew Zhang & Tony Li

============
The objective is to create an Elden Ring open world game. This game has 10 maps (or areas) like Elden ring, and each area has 9 squares (different parts of each map). The user can tp to any map even while they are completing a square, but once you leave, the square of the level they are on gets reset (like an elden ring boss) but the other bosses (squares) that you beat gets saved so users can skip through the beat areas of the map to access other parts. Progress is stored in 10 map objects, but if you die, YOU LOSE EVERYTHING. Read more to learn the quirk on teleportation. 
============

Teleportation:
- Users can always /displaymap to get all the maps you can travel to and once you enter the code, you can travel there (like an elden ring map).
- However, the position you teleport to will be the same as the postition on the current map. EX: if you are in position (1,1) on current map, teleporting to another map still puts you at (1,1);
- This limits your movement as you can not traverse the map freely as you are always prompted to beat whats on the current square. 

Other commands:
- When you are traveling with an animation, you are hinted at commands to check your health and items in your inventory. 

Rules:
- Once you lose all your health, all progress is lost at that square, you have to start over.
- Items are rare but once you find them, you can use it to skip past attacks. 
- When you decide to move away to another square, all progress is lost. That's the challenging part! 
- Once you beat the square, the number of square beat gets incremented, you can not try to beat the square again!

How to win:
- You only need to complete 10 squares of the ten maps, you can choose any. But once you lose all your health! GAME OVER EVERYTHING RESETS!

The whole code is written by us while referring to slides / past coding assignments. We also referred to resources such as stack overflow for debugging for std::shared_ptrs and race conditions of having 2 threads (we just have 1 now, apprently its race conditioning the reading of the input conosle and the output console). 

How Topics Are Used:

1. Standard containers:
used throughout all of the classes to store information of various types
2. Custom Template Class:
inventory is a custom template class that is used to store the inventory information of the player
3. Custom Namespace
Util is a custom namespace that is used for a template quicksort function
4. Classes with Constructor, Destructor, Assignment Operator

5.

6.

7.

8.

9.

10.

